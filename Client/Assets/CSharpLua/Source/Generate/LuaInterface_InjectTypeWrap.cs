//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaInterface_InjectTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(LuaInterface.InjectType));
		L.RegConstant("None", LuaInterface.InjectType.None);
		L.RegConstant("After", LuaInterface.InjectType.After);
		L.RegConstant("Before", LuaInterface.InjectType.Before);
		L.RegConstant("Replace", LuaInterface.InjectType.Replace);
		L.RegConstant("ReplaceWithPreInvokeBase", LuaInterface.InjectType.ReplaceWithPreInvokeBase);
		L.RegConstant("ReplaceWithPostInvokeBase", LuaInterface.InjectType.ReplaceWithPostInvokeBase);
		L.EndEnum();
		TypeTraits<LuaInterface.InjectType>.Check = CheckType;
		StackTraits<LuaInterface.InjectType>.Push = Push;
	}

	static void Push(IntPtr L, LuaInterface.InjectType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(LuaInterface.InjectType), L, pos);
	}
}

